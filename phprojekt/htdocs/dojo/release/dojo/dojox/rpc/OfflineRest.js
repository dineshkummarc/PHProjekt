/*
	Copyright (c) 2004-2011, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/


if(!dojo._hasResource["dojox.rpc.OfflineRest"]){dojo._hasResource["dojox.rpc.OfflineRest"]=!0;dojo.provide("dojox.rpc.OfflineRest");dojo.require("dojox.data.ClientFilter");dojo.require("dojox.rpc.Rest");dojo.require("dojox.storage");var Rest=dojox.rpc.Rest,namespace="dojox_rpc_OfflineRest",loaded,index=Rest._index;dojox.storage.manager.addOnLoad(function(){loaded=dojox.storage.manager.available;for(var a in index)saveObject(index[a],a)});var dontSave,getStorageKey=function(a){return a.replace(/[^0-9A-Za-z_]/g,
"_")},saveObject=function(a,c){if(loaded&&!dontSave&&(c||a&&a.__id))dojox.storage.put(getStorageKey(c||a.__id),typeof a=="object"?dojox.json.ref.toJson(a):a,function(){},namespace)},isNetworkError=function(a){return a instanceof Error&&(a.status==503||a.status>12E3||!a.status)},sendChanges=function(){if(loaded){var a=dojox.storage.get("dirty",namespace);if(a)for(var c in a)commitDirty(c,a)}},OfflineRest,sync=function(){OfflineRest.sendChanges();OfflineRest.downloadChanges()},syncId=setInterval(sync,
15E3);dojo.connect(document,"ononline",sync);OfflineRest=dojox.rpc.OfflineRest={turnOffAutoSync:function(){clearInterval(syncId)},sync:sync,sendChanges:sendChanges,downloadChanges:function(){},addStore:function(a,c){OfflineRest.stores.push(a);a.fetch({queryOptions:{cache:!0},query:c,onComplete:function(c,d){a._localBaseResults=c;a._localBaseFetch=d}})}};OfflineRest.stores=[];var defaultGet=Rest._get;Rest._get=function(a,c){try{sendChanges();if(window.navigator&&navigator.onLine===!1)throw Error();
var b=defaultGet(a,c)}catch(d){b=new dojo.Deferred,b.errback(d)}var e=dojox.rpc._sync;b.addCallback(function(b){saveObject(b,a._getRequest(c).url);return b});b.addErrback(function(d){if(loaded)if(isNetworkError(d)){var f={},g=function(a,c){if(f[a])return c;var b=dojo.fromJson(dojox.storage.get(getStorageKey(a),namespace))||c;f[a]=b;for(var d in b){var e=b[d];if(a=e&&e.$ref)a.substring&&a.substring(0,4)=="cid:"&&(a=a.substring(4)),b[d]=g(a,e)}if(b instanceof Array)for(d=0;d<b.length;d++)b[d]===void 0&&
b.splice(d--,1);return b};dontSave=!0;var i=g(a._getRequest(c).url);if(!i)return d;dontSave=!1;return i}else return d;else{if(e)return Error("Storage manager not loaded, can not continue");b=new dojo.Deferred;b.addCallback(arguments.callee);dojox.storage.manager.addOnLoad(function(){b.callback()});return b}});return b};var changeOccurred=function(a,c,b,d,e){a=="delete"?dojox.storage.remove(getStorageKey(c),namespace):dojox.storage.put(getStorageKey(b),d,function(){},namespace);if(a=e&&e._store)a.updateResultSet(a._localBaseResults,
a._localBaseFetch),dojox.storage.put(getStorageKey(e._getRequest(a._localBaseFetch.query).url),dojox.json.ref.toJson(a._localBaseResults),function(){},namespace)};dojo.addOnLoad(function(){dojo.connect(dojox.data,"restListener",function(a){var c=a.channel,b=a.event.toLowerCase(),d=dojox.rpc.JsonRest&&dojox.rpc.JsonRest.getServiceAndId(c).service;changeOccurred(b,c,b=="post"?c+a.result.id:c,dojo.toJson(a.result),d)})});var defaultChange=Rest._change;Rest._change=function(a,c,b,d){if(!loaded)return defaultChange.apply(this,
arguments);var e=c._getRequest(b).url;changeOccurred(a,e,dojox.rpc.JsonRest._contentId,d,c);var h=dojox.storage.get("dirty",namespace)||{};if(a=="put"||a=="delete")var f=e;else{var f=0,g;for(g in h)isNaN(parseInt(g))||(f=g);f++}h[f]={method:a,id:e,content:d};return commitDirty(f,h)};var commitDirty=function(a,c){var b=c[a],d=dojox.rpc.JsonRest.getServiceAndId(b.id),d=defaultChange(b.method,d.service,d.id,b.content);c[a]=b;dojox.storage.put("dirty",c,function(){},namespace);d.addBoth(function(b){if(isNetworkError(b))return null;
var c=dojox.storage.get("dirty",namespace)||{};delete c[a];dojox.storage.put("dirty",c,function(){},namespace);return b});return d};dojo.connect(index,"onLoad",saveObject);dojo.connect(index,"onUpdate",saveObject)};