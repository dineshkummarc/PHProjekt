/*
	Copyright (c) 2004-2011, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/


if(!dojo._hasResource["dojox.grid.enhanced._PluginManager"])dojo._hasResource["dojox.grid.enhanced._PluginManager"]=!0,dojo.provide("dojox.grid.enhanced._PluginManager"),dojo.require("dojox.grid.enhanced._Events"),dojo.require("dojox.grid.enhanced._FocusManager"),dojo.declare("dojox.grid.enhanced._PluginManager",null,{_options:null,_plugins:null,_connects:null,constructor:function(a){this.grid=a;this._store=a.store;this._options={};this._plugins=[];this._connects=[];this._parseProps(this.grid.plugins);
a.connect(a,"_setStore",dojo.hitch(this,function(a){if(this._store!==a)this.forEach("onSetStore",[a,this._store]),this._store=a}))},startup:function(){this.forEach("onStartUp")},preInit:function(){this.grid.focus.destroy();this.grid.focus=new dojox.grid.enhanced._FocusManager(this.grid);new dojox.grid.enhanced._Events(this.grid);this._init(!0);this.forEach("onPreInit")},postInit:function(){this._init(!1);dojo.forEach(this.grid.views.views,this._initView,this);this._connects.push(dojo.connect(this.grid.views,
"addView",dojo.hitch(this,this._initView)));if(this._plugins.length>0){var a=this.grid.edit;if(a)a.styleRow=function(){}}this.forEach("onPostInit")},forEach:function(a,b){dojo.forEach(this._plugins,function(c){c&&c[a]&&c[a].apply(c,b?b:[])})},_parseProps:function(a){if(a){var b,c={},d=this._options,e=this.grid,f=dojox.grid.enhanced._PluginManager.registry;for(b in a)a[b]&&this._normalize(b,a,f,c);if(d.dnd||d.indirectSelection)d.columnReordering=!1;dojo.mixin(e,d)}},_normalize:function(a,b,c,d){if(!c[a])throw Error("Plugin "+
a+" is required.");if(d[a])throw Error("Recursive cycle dependency is not supported.");var e=this._options;if(e[a])return e[a];d[a]=!0;e[a]=dojo.mixin({},c[a],dojo.isObject(b[a])?b[a]:{});var f=e[a].dependency;if(f)dojo.isArray(f)||(f=e[a].dependency=[f]),dojo.forEach(f,function(a){if(!this._normalize(a,b,c,d))throw Error("Plugin "+a+" is required.");},this);delete d[a];return e[a]},_init:function(a){var b,c,d=this._options;for(b in d)c=d[b].preInit,(a?c:!c)&&d[b]["class"]&&!this.pluginExisted(b)&&
this.loadPlugin(b)},loadPlugin:function(a){var b=this._options[a];if(!b)return null;if(a=this.getPlugin(a))return a;dojo.forEach(b.dependency,function(a){if(!this.loadPlugin(a))throw Error("Plugin "+a+" is required.");},this);a=b["class"];delete b["class"];a=(new this.getPluginClazz(a))(this.grid,b);this._plugins.push(a);return a},_initView:function(a){a&&(dojox.grid.util.funnelEvents(a.contentNode,a,"doContentEvent",["mouseup","mousemove"]),dojox.grid.util.funnelEvents(a.headerNode,a,"doHeaderEvent",
["mouseup"]))},pluginExisted:function(a){return!!this.getPlugin(a)},getPlugin:function(a){for(var b=this._plugins,a=a.toLowerCase(),c=0,d=b.length;c<d;c++)if(a==b[c].name.toLowerCase())return b[c];return null},getPluginClazz:function(a){if(dojo.isFunction(a))return a;var b='Please make sure Plugin "'+a+'" is existed.';try{var c=dojo.getObject(a);if(!c)throw Error(b);return c}catch(d){throw Error(b);}},isFixedCell:function(a){return a&&(a.isRowSelector||a.fixedPos)},destroy:function(){dojo.forEach(this._connects,
dojo.disconnect);this.forEach("destroy");this.grid.unwrap&&this.grid.unwrap();delete this._connects;delete this._plugins;delete this._options}}),dojox.grid.enhanced._PluginManager.registerPlugin=function(a,b){if(a){var c=dojox.grid.enhanced._PluginManager;c.registry=c.registry||{};c.registry[a.prototype.name]=dojo.mixin({"class":a},b?b:{})}else console.warn("Failed to register plugin, class missed!")};