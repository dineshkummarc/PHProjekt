/*
	Copyright (c) 2004-2011, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/


dojo._hasResource["dojox.drawing.Drawing"]||(dojo._hasResource["dojox.drawing.Drawing"]=!0,dojo.provide("dojox.drawing.Drawing"),function(){dojo.declare("dojox.drawing.Drawing",[],{ready:!1,mode:"",width:0,height:0,constructor:function(a,c){var b=dojo.attr(c,"defaults");if(b)dojox.drawing.defaults=dojo.getObject(b);this.defaults=dojox.drawing.defaults;this.id=c.id;dojox.drawing.register(this,"drawing");this.mode=(a.mode||dojo.attr(c,"mode")||"").toLowerCase();b=dojo.contentBox(c);this.width=b.w;this.height=
b.h;this.util=dojox.drawing.util.common;this.util.register(this);this.keys=dojox.drawing.manager.keys;this.mouse=new dojox.drawing.manager.Mouse({util:this.util,keys:this.keys,id:this.mode=="ui"?"MUI":"mse"});this.mouse.setEventMode(this.mode);this.tools={};this.stencilTypes={};this.stencilTypeMap={};this.domNode=this.srcRefNode=c;this.plugins=(b=dojo.attr(c,"plugins"))?eval(b):[];this.widgetId=this.id;dojo.attr(this.domNode,"widgetId",this.widgetId);dijit&&dijit.registry?(dijit.registry.add(this),
console.log("using dijit")):(dijit.registry={objs:{},add:function(a){this.objs[a.id]=a}},dijit.byId=function(a){return dijit.registry.objs[a]},dijit.registry.add(this));var b=dojox.drawing.getRegistered("stencil"),d;for(d in b)this.registerTool(b[d].name);b=dojox.drawing.getRegistered("tool");for(d in b)this.registerTool(b[d].name);b=dojox.drawing.getRegistered("plugin");for(d in b)this.registerTool(b[d].name);this._createCanvas()},_createCanvas:function(){console.info("drawing create canvas...");
this.canvas=new dojox.drawing.manager.Canvas({srcRefNode:this.domNode,util:this.util,mouse:this.mouse,callback:dojo.hitch(this,"onSurfaceReady")});this.initPlugins()},resize:function(a){a&&dojo.style(this.domNode,{width:a.w+"px",height:a.h+"px"});this.canvas?a&&this.canvas.resize(a.w,a.h):this._createCanvas()},startup:function(){},getShapeProps:function(a,c){var b=a.stencilType,d=this.mode=="ui"||c=="ui";return dojo.mixin({container:d&&!b?this.canvas.overlay.createGroup():this.canvas.surface.createGroup(),
util:this.util,keys:this.keys,mouse:this.mouse,drawing:this,drawingType:d&&!b?"ui":"stencil",style:this.defaults.copy()},a||{})},addPlugin:function(a){this.plugins.push(a);this.canvas.surfaceReady&&this.initPlugins()},initPlugins:function(){if(!this.canvas||!this.canvas.surfaceReady)var a=dojo.connect(this,"onSurfaceReady",this,function(){dojo.disconnect(a);this.initPlugins()});else dojo.forEach(this.plugins,function(a,b){var d=dojo.mixin({util:this.util,keys:this.keys,mouse:this.mouse,drawing:this,
stencils:this.stencils,anchors:this.anchors,canvas:this.canvas},a.options||{});this.registerTool(a.name,dojo.getObject(a.name));try{this.plugins[b]=new this.tools[a.name](d)}catch(e){console.error("Failed to initilaize plugin:\t"+a.name+". Did you require it?")}},this),this.plugins=[],this.mouse.setCanvas()},onSurfaceReady:function(){this.ready=!0;this.mouse.init(this.canvas.domNode);this.undo=new dojox.drawing.manager.Undo({keys:this.keys});this.anchors=new dojox.drawing.manager.Anchors({drawing:this,
mouse:this.mouse,undo:this.undo,util:this.util});if(this.mode!="ui")this.stencils=new dojox.drawing.manager.Stencil({canvas:this.canvas,surface:this.canvas.surface,mouse:this.mouse,undo:this.undo,keys:this.keys,anchors:this.anchors});this.uiStencils=new dojox.drawing.manager.StencilUI({canvas:this.canvas,surface:this.canvas.surface,mouse:this.mouse,keys:this.keys});if(dojox.gfx.renderer=="silverlight")try{new dojox.drawing.plugins.drawing.Silverlight({util:this.util,mouse:this.mouse,stencils:this.stencils,
anchors:this.anchors,canvas:this.canvas})}catch(a){throw Error("Attempted to install the Silverlight plugin, but it was not found.");}dojo.forEach(this.plugins,function(a){a.onSurfaceReady&&a.onSurfaceReady()})},addUI:function(a,c){if(!this.ready){var b=dojo.connect(this,"onSurfaceReady",this,function(){dojo.disconnect(b);this.addUI(a,c)});return!1}c&&!c.data&&!c.points&&(c={data:c});return!this.stencilTypes[a]?(a!="tooltip"&&console.warn("Not registered:",a),null):this.uiStencils.register(new this.stencilTypes[a](this.getShapeProps(c,
"ui")))},addStencil:function(a,c){if(!this.ready){var b=dojo.connect(this,"onSurfaceReady",this,function(){dojo.disconnect(b);this.addStencil(a,c)});return!1}c&&!c.data&&!c.points&&(c={data:c});var d=this.stencils.register(new this.stencilTypes[a](this.getShapeProps(c)));this.currentStencil&&this.currentStencil.moveToFront();return d},removeStencil:function(a){this.stencils.unregister(a);a.destroy()},removeAll:function(){this.stencils.removeAll()},selectAll:function(){this.stencils.selectAll()},toSelected:function(a){this.stencils.toSelected.apply(this.stencils,
arguments)},exporter:function(){console.log("this.stencils",this.stencils);return this.stencils.exporter()},importer:function(a){dojo.forEach(a,function(a){this.addStencil(a.type,a)},this)},changeDefaults:function(a,c){if(c!=void 0&&c)for(var b in a)this.defaults[b]=a[b];else for(b in a)for(var d in a[b])this.defaults[b][d]=a[b][d];if(this.currentStencil!=void 0&&(!this.currentStencil.created||this.defaults.clickMode))this.unSetTool(),this.setTool(this.currentType)},onRenderStencil:function(a){this.stencils.register(a);
this.unSetTool();this.defaults.clickMode?this.defaults.clickable=!0:this.setTool(this.currentType)},onDeleteStencil:function(a){this.stencils.unregister(a)},registerTool:function(a){if(!this.tools[a]){var c=dojo.getObject(a);this.tools[a]=c;var b=this.util.abbr(a);this.stencilTypes[b]=c;this.stencilTypeMap[b]=a}},getConstructor:function(a){return this.stencilTypes[a]},setTool:function(a){if(this.mode!="ui")if(!this.canvas||!this.canvas.surface)var c=dojo.connect(this,"onSurfaceReady",this,function(){dojo.disconnect(c);
this.setTool(a)});else{this.currentStencil&&this.unSetTool();this.currentType=this.tools[a]?a:this.stencilTypeMap[a];try{this.currentStencil=new this.tools[this.currentType]({container:this.canvas.surface.createGroup(),util:this.util,mouse:this.mouse,keys:this.keys});console.log("new tool is:",this.currentStencil.id,this.currentStencil);if(this.defaults.clickMode)this.defaults.clickable=!1;this.currentStencil.connect(this.currentStencil,"onRender",this,"onRenderStencil");this.currentStencil.connect(this.currentStencil,
"destroy",this,"onDeleteStencil")}catch(b){console.error("dojox.drawing.setTool Error:",b),console.error(this.currentType+" is not a constructor: ",this.tools[this.currentType])}}},unSetTool:function(){this.currentStencil.created||this.currentStencil.destroy()}})}());