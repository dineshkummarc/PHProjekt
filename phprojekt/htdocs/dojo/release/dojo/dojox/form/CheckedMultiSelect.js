/*
	Copyright (c) 2004-2011, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/


dojo._hasResource["dojox.form.CheckedMultiSelect"]||(dojo._hasResource["dojox.form.CheckedMultiSelect"]=!0,dojo.provide("dojox.form.CheckedMultiSelect"),dojo.require("dijit.form.CheckBox"),dojo.require("dijit.Tooltip"),dojo.require("dijit.form._FormSelectWidget"),dojo.declare("dojox.form._CheckedMultiSelectItem",[dijit._Widget,dijit._Templated],{widgetsInTemplate:!0,templateString:dojo.cache("dojox.form","resources/_CheckedMultiSelectItem.html",'<div class="dijitReset ${baseClass}"\n\t><input class="${baseClass}Box" dojoType="dijit.form.CheckBox" dojoAttachPoint="checkBox" \n\t\tdojoAttachEvent="_onClick:_changeBox" type="${_type.type}" baseClass="${_type.baseClass}"\n\t/><div class="dijitInline ${baseClass}Label" dojoAttachPoint="labelNode" dojoAttachEvent="onclick:_onClick"></div\n></div>\n'),
baseClass:"dojoxMultiSelectItem",option:null,parent:null,disabled:!1,readOnly:!1,postMixInProperties:function(){this._type=this.parent.multiple?{type:"checkbox",baseClass:"dijitCheckBox"}:{type:"radio",baseClass:"dijitRadio"};this.disabled=this.option.disabled=this.option.disabled||!1;this.inherited(arguments)},postCreate:function(){this.inherited(arguments);this.labelNode.innerHTML=this.option.label},_changeBox:function(){if(!this.get("disabled")&&!this.get("readOnly"))this.parent.multiple?this.option.selected=
this.checkBox.get("value")&&!0:this.parent.set("value",this.option.value),this.parent._updateSelection(),this.parent.focus()},_onClick:function(a){this.get("disabled")||this.get("readOnly")?dojo.stopEvent(a):this.checkBox._onClick(a)},_updateBox:function(){this.checkBox.set("value",this.option.selected)},_setDisabledAttr:function(a){this.disabled=a||this.option.disabled;this.checkBox.set("disabled",this.disabled);dojo.toggleClass(this.domNode,"dojoxMultiSelectDisabled",this.disabled)},_setReadOnlyAttr:function(a){this.checkBox.set("readOnly",
a);this.readOnly=a}}),dojo.declare("dojox.form.CheckedMultiSelect",dijit.form._FormSelectWidget,{templateString:dojo.cache("dojox.form","resources/CheckedMultiSelect.html",'<div class="dijit dijitReset dijitInline" dojoAttachEvent="onmousedown:_onMouseDown,onclick:focus"\n\t><select class="${baseClass}Select" multiple="true" dojoAttachPoint="containerNode,focusNode"></select\n\t><div dojoAttachPoint="wrapperDiv"></div\n></div>\n'),baseClass:"dojoxMultiSelect",required:!1,invalidMessage:"At least one item must be selected.",
_message:"",tooltipPosition:[],_onMouseDown:function(a){dojo.stopEvent(a)},validator:function(){return!this.required?!0:dojo.some(this.getOptions(),function(a){return a.selected&&a.value!=null&&a.value.toString().length!=0})},validate:function(a){dijit.hideTooltip(this.domNode);(a=this.isValid(a))||this.displayMessage(this.invalidMessage);return a},isValid:function(){return this.validator()},getErrorMessage:function(){return this.invalidMessage},displayMessage:function(a){dijit.hideTooltip(this.domNode);
a&&dijit.showTooltip(a,this.domNode,this.tooltipPosition)},onAfterAddOptionItem:function(){},_addOptionItem:function(a){var b=new dojox.form._CheckedMultiSelectItem({option:a,parent:this});this.wrapperDiv.appendChild(b.domNode);this.onAfterAddOptionItem(b,a)},_refreshState:function(){this.validate(this._focused)},onChange:function(){this._refreshState()},reset:function(){this.inherited(arguments);dijit.hideTooltip(this.domNode)},_updateSelection:function(){this.inherited(arguments);this._handleOnChange(this.value);
dojo.forEach(this._getChildren(),function(a){a._updateBox()})},_getChildren:function(){return dojo.map(this.wrapperDiv.childNodes,function(a){return dijit.byNode(a)})},invertSelection:function(){dojo.forEach(this.options,function(a){a.selected=!a.selected});this._updateSelection()},_setDisabledAttr:function(a){this.inherited(arguments);dojo.forEach(this._getChildren(),function(b){b&&b.set&&b.set("disabled",a)})},_setReadOnlyAttr:function(a){"readOnly"in this.attributeMap&&this._attrToDom("readOnly",
a);this.readOnly=a;dojo.forEach(this._getChildren(),function(b){b&&b.set&&b.set("readOnly",a)})},uninitialize:function(){dijit.hideTooltip(this.domNode);dojo.forEach(this._getChildren(),function(a){a.destroyRecursive()});this.inherited(arguments)}}));