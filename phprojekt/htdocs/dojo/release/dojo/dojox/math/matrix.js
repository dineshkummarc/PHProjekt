/*
	Copyright (c) 2004-2011, The Dojo Foundation All Rights Reserved.
	Available via Academic Free License >= 2.1 OR the modified BSD license.
	see: http://dojotoolkit.org/license for details
*/


dojo._hasResource["dojox.math.matrix"]||(dojo._hasResource["dojox.math.matrix"]=!0,dojo.provide("dojox.math.matrix"),dojo.getObject("math.matrix",!0,dojox),dojo.mixin(dojox.math.matrix,{iDF:0,ALMOST_ZERO:1.0E-10,multiply:function(a,d){var f=a.length,c=a[0].length,b=d.length,e=d[0].length;if(c!=b)return console.warn("Can't multiply matricies of sizes "+c+","+f+" and "+e+","+b),[[0]];for(var b=[],g=0;g<f;g++){b[g]=[];for(var h=0;h<e;h++)for(var i=b[g][h]=0;i<c;i++)b[g][h]+=a[g][i]*d[i][h]}return b},
product:function(){if(arguments.length==0)return console.warn("can't multiply 0 matrices!"),1;for(var a=arguments[0],d=1;d<arguments.length;d++)a=this.multiply(a,arguments[d]);return a},sum:function(){if(arguments.length==0)return console.warn("can't sum 0 matrices!"),0;var a=this.copy(arguments[0]),d=a.length;if(d==0)return console.warn("can't deal with matrices of 0 rows!"),0;var f=a[0].length;if(f==0)return console.warn("can't deal with matrices of 0 cols!"),0;for(var c=1;c<arguments.length;++c){var b=
arguments[c];if(b.length!=d||b[0].length!=f)return console.warn("can't add matrices of different dimensions: first dimensions were "+d+"x"+f+", current dimensions are "+b.length+"x"+b[0].length),0;for(var e=0;e<d;e++)for(var g=0;g<f;g++)a[e][g]+=b[e][g]}return a},inverse:function(a){if(a.length==1&&a[0].length==1)return[[1/a[0][0]]];var d=a.length,f=this.create(d,d),c=this.adjoint(a),b=this.determinant(a),a=0;if(b==0)return console.warn("Determinant Equals 0, Not Invertible."),[[0]];else a=1/b;for(b=
0;b<d;b++)for(var e=0;e<d;e++)f[b][e]=a*c[b][e];return f},determinant:function(a){if(a.length!=a[0].length)return console.warn("Can't calculate the determinant of a non-squre matrix!"),0;for(var d=a.length,f=1,a=this.upperTriangle(a),c=0;c<d;c++){var b=a[c][c];if(Math.abs(b)<this.ALMOST_ZERO)return 0;f*=b}f*=this.iDF;return f},upperTriangle:function(a){var a=this.copy(a),d=0,d=0,f=a.length,c=1;this.iDF=1;for(var b=0;b<f-1;b++){typeof a[b][b]!="number"&&console.warn("non-numeric entry found in a numeric matrix: m["+
b+"]["+b+"]="+a[b][b]);for(var c=1,e=0;a[b][b]==0&&!e;)if(b+c>=f)this.iDF=0,e=1;else{for(var g=0;g<f;g++)d=a[b][g],a[b][g]=a[b+c][g],a[b+c][g]=d;c++;this.iDF*=-1}for(c=b+1;c<f;c++)if(typeof a[c][b]!="number"&&console.warn("non-numeric entry found in a numeric matrix: m["+c+"]["+b+"]="+a[c][b]),typeof a[b][c]!="number"&&console.warn("non-numeric entry found in a numeric matrix: m["+b+"]["+c+"]="+a[b][c]),a[b][b]!=0){d=-1*a[c][b]/a[b][b];for(e=b;e<f;e++)a[c][e]=d*a[b][e]+a[c][e]}}return a},create:function(a,
d,f){for(var f=f||0,c=[],b=0;b<d;b++){c[b]=[];for(var e=0;e<a;e++)c[b][e]=f}return c},ones:function(a,d){return this.create(a,d,1)},zeros:function(a,d){return this.create(a,d)},identity:function(a,d){for(var d=d||1,f=[],c=0;c<a;c++){f[c]=[];for(var b=0;b<a;b++)f[c][b]=c==b?d:0}return f},adjoint:function(a){var d=a.length;if(d<=1)return console.warn("Can't find the adjoint of a matrix with a dimension less than 2"),[[0]];if(a.length!=a[0].length)return console.warn("Can't find the adjoint of a non-square matrix"),
[[0]];for(var f=this.create(d,d),c=this.create(d-1,d-1),b=0,e=0,g=0,h=0,i=b=0;i<d;i++)for(var j=0;j<d;j++){for(b=g=0;b<d;b++)if(b!=i){for(e=h=0;e<d;e++)e!=j&&(c[g][h]=a[b][e],h++);g++}b=this.determinant(c);f[i][j]=Math.pow(-1,i+j)*b}return this.transpose(f)},transpose:function(a){for(var d=this.create(a.length,a[0].length),f=0;f<a.length;f++)for(var c=0;c<a[f].length;c++)d[c][f]=a[f][c];return d},format:function(a,d){function f(a,b){var c=Math.pow(10,b),c=(Math.round(a*c)/c).toString();c.charAt(0)!=
"-"&&(c=" "+c);for(c.indexOf(".")>-1&&(c+=".");c.length<b+3;)c+="0";return c}for(var d=d||5,c=a.length,b=c>0?a[0].length:0,e="",g=0;g<c;g++){e+="| ";for(var h=0;h<b;h++)e+=f(a[g][h],d)+" ";e+="|\n"}return e},copy:function(a){for(var d=a.length,f=a[0].length,c=this.create(f,d),b=0;b<d;b++)for(var e=0;e<f;e++)c[b][e]=a[b][e];return c},scale:function(a,d){for(var a=this.copy(a),f=a.length,c=a[0].length,b=0;b<f;b++)for(var e=0;e<c;e++)a[b][e]*=d;return a}}));